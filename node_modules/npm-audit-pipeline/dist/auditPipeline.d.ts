import * as TE from 'fp-ts/TaskEither';
import * as RT from 'fp-ts/ReaderTask';
import { NpmAuditorConfiguration } from './argsParser';
import { NpmAuditResponse } from './executorResponseHandler';
export declare type AuditPipelineEnv = {
    getCommandLineArgs: () => ReadonlyArray<string>;
    runNpmAuditCommand: (config: NpmAuditorConfiguration) => TE.TaskEither<Error, NpmAuditResponse>;
};
export declare enum ExitStatus {
    success = 0,
    failed = 1
}
export declare const runAudit: () => RT.ReaderTask<AuditPipelineEnv, ExitStatus>;
